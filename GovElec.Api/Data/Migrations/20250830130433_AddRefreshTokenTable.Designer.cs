// <auto-generated />
using System;
using GovElec.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GovElec.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250830130433_AddRefreshTokenTable")]
    partial class AddRefreshTokenTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("GovElec.Api.Models.Demande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Batiment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentaireAdministrateur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentaireTechnicien")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentaireUtilisateur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Contexte")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("CosPhi")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DateCloture")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDebutTravaux")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateDemandeApprobation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateReponse")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateReponseAttendue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateReponseFinale")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DemandeurId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Disjoncteur")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisjoncteurPrincipal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Equipement")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Ks")
                        .HasColumnType("REAL");

                    b.Property<float>("Ku")
                        .HasColumnType("REAL");

                    b.Property<string>("Priorite")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Projet")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Puissance")
                        .HasColumnType("REAL");

                    b.Property<string>("Regime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusTechnicien")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TechnicienId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeDemande")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeReseau")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VenantDe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DemandeurId");

                    b.HasIndex("TechnicienId");

                    b.ToTable("Demandes");
                });

            modelBuilder.Entity("GovElec.Api.Models.RefreshToken", b =>
                {
                    b.Property<string>("Token")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiresUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Token");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("GovElec.Api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Equipe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("PasswordHashSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PasswordIterations")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GovElec.Api.Models.Demande", b =>
                {
                    b.HasOne("GovElec.Api.Models.User", "Demandeur")
                        .WithMany("DemandesEmises")
                        .HasForeignKey("DemandeurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GovElec.Api.Models.User", "Technicien")
                        .WithMany("DemandesAssignees")
                        .HasForeignKey("TechnicienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Demandeur");

                    b.Navigation("Technicien");
                });

            modelBuilder.Entity("GovElec.Api.Models.User", b =>
                {
                    b.Navigation("DemandesAssignees");

                    b.Navigation("DemandesEmises");
                });
#pragma warning restore 612, 618
        }
    }
}
